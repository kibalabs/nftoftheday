name: Build
on:
  pull_request:
    branches: [main]
jobs:
  build-app:
    runs-on: ubuntu-latest
    env:
      DOCKER_IMAGE: build
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build docker image
        uses: docker/build-push-action@v2
        with:
          context: app
          load: true
          cache-from: type=gha,scope=app
          cache-to: type=gha,mode=max,scope=app
          use: linux/amd64,linux/arm64-v8
      - name: Build testable docker image
        uses: docker/build-push-action@v2
        with:
          context: app
          load: true
          cache-from: type=gha,scope=app
          cache-to: type=gha,mode=max,scope=app
          tags: ${{ env.DOCKER_IMAGE }}
          target: build
      - name: Run linting
        run: |
          docker run --name lint $DOCKER_IMAGE npm run lint -- --output-file lint-results.json --output-file-format annotations
          docker cp lint:/app/lint-results.json ./app/lint-results.json
      - name: Upload linting results
        uses: kibalabs/github-action-create-annotations@main
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          json-file-path: ./app/lint-results.json
          check-name: lint-app
          fail-on-error: false
          path-prefix: ./app/
      - name: Run typing
        run: |
          docker run --name typing $DOCKER_IMAGE npm run type-check -- --output-file typing-results.json --output-file-format annotations
          docker cp typing:/app/typing-results.json ./app/typing-results.json
      - name: Upload typing results
        uses: kibalabs/github-action-create-annotations@main
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          json-file-path: ./app/typing-results.json
          check-name: type-app
          fail-on-error: false
          path-prefix: ./app/
  build-api:
    runs-on: ubuntu-latest
    env:
      DOCKER_IMAGE: build
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build docker image
        uses: docker/build-push-action@v2
        with:
          context: api
          load: true
          cache-from: type=gha,scope=api
          cache-to: type=gha,mode=max,scope=api
          tags: ${{ env.DOCKER_IMAGE }}
          use: linux/amd64,linux/arm64-v8
      - name: Run lint
        run: |
          docker run --name lint $DOCKER_IMAGE lint --directory notd --output-file lint-results.json --output-format annotations
          docker cp lint:/app/lint-results.json ./api/lint-results.json
      - name: Upload lint results
        uses: kibalabs/github-action-create-annotations@main
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          json-file-path: ./api/lint-results.json
          check-name: lint-api
          fail-on-error: false
      - name: Run type-check
        run: |
          docker run --name type-check $DOCKER_IMAGE type-check --directory notd --output-file type-check-results.json --output-format annotations
          docker cp type-check:/app/type-check-results.json ./api/type-check-results.json
      - name: Upload type-check results
        uses: kibalabs/github-action-create-annotations@main
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          json-file-path: ./api/type-check-results.json
          check-name: type-check-api
          fail-on-error: false
      - name: Run security-check
        run: |
          docker run --name security-check $DOCKER_IMAGE security-check --directory notd --output-file security-check-results.json --output-format annotations
          docker cp security-check:/app/security-check-results.json ./api/security-check-results.json
      - name: Upload security-check results
        uses: kibalabs/github-action-create-annotations@main
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          json-file-path: ./api/security-check-results.json
          check-name: security-check-api
          fail-on-error: false
